{"version":3,"sources":["authConfig.js","components/SignInButton.jsx","components/SignOutButton.jsx","components/PageLayout.jsx","components/ProfileData.jsx","graph.js","components/images/bathroom1.png","components/images/PDF.png","components/images/JPG.png","components/images/DOC.png","components/images/FILE.png","components/images/FOLDER2.png","components/album.js","App.jsx","components/visualizador.js","routes.js","index.js"],"names":["msalConfig","auth","clientId","authority","redirectUri","cache","cacheLocation","storeAuthStateInCookie","system","loggerOptions","loggerCallback","level","message","containsPii","LogLevel","Error","console","error","Info","info","Verbose","debug","Warning","warn","loginRequest","scopes","graphConfig","SignInButton","instance","useMsal","Button","className","variant","color","drop","onClick","loginType","loginPopup","catch","e","log","loginRedirect","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","SignOutButton","buscar","setBuscar","classes","name","enter","InputBase","placeholder","input","inputProps","value","onKeyPress","target","key","onChange","handleChange","autoComplete","logoutType","logoutPopup","postLogoutRedirectUri","mainWindowRedirectUri","logoutRedirect","PageLayout","children","isAuthenticated","useIsAuthenticated","AppBar","Toolbar","Typography","ProfileData","props","graphData","id","givenName","surname","userPrincipalName","accessToken","a","headers","Headers","bearer","append","options","method","fetch","then","response","json","Copyright","align","Link","href","Date","getFullYear","buscarBreadcrumb","breadcrumb","foldersOriginal","result","i","buscaRuta","join","length","path","push","handleClick","event","setBreadcrumb","folders","setFolders","recorrido","setRecorrido","setConsegui","actual","setActual","setEnter","historial","longitud","findIndex","element","innerText","SimpleBreadcrumbs","arreglo","pop","Breadcrumbs","separator","aria-label","map","directorioRecorrido","underline","icon","heroContent","background","paper","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","flexDirection","cardMedia","cardContent","footer","findNode","finalArray","includes","Album","buscador","useState","setFoldersOriginal","consegui","fetchApi","status","responseJSON","useEffect","caminito","ruta","encodeURI","shift","ruta2","b","toUpperCase","match","arregloDeCoincidencias","hallado","displayImage","param","pdf","jpg","doc","file","MostrarRuta","setearLaVista","split","splice","Fragment","CssBaseline","Container","maxWidth","Grid","container","item","xs","sm","md","Card","CardMedia","image","type","carpeta","extension","CardContent","gutterBottom","component","CardActions","size","cards","setearElBreadcrumb","handleOpen","handleView","ProfileContent","accounts","setGraphData","paragraph","acquireTokenSilent","account","callMsGraph","MainContent","src","logo","alt","App","visualizador","Routes","rutaIIS","exact","msalInstance","PublicClientApplication","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7288405a.chunk.js","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { LogLevel } from \"@azure/msal-browser\";\n\n/**\n * Configuration object to be passed to MSAL instance on creation. \n * For a full list of MSAL.js configuration parameters, visit:\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/configuration.md \n */\nexport const msalConfig = {\n    auth: {\n        /* clientId: \"ce6525fe-1845-4812-80d3-8ded6fd784e2\",\n        authority: \"https://login.microsoftonline.com/common\",\n        redirectUri: \"http://localhost:3000/\" */\n        clientId: \"6a6da228-77ee-4861-b81a-09f06cb71774\",\n        authority: \"https://login.microsoftonline.com/3b33923a-78f3-4f37-9921-f0186d9bacd1\",\n        redirectUri: \"http://localhost:3000/\"\n    },\n    cache: {\n        cacheLocation: \"sessionStorage\", // This configures where your cache will be stored\n        storeAuthStateInCookie: false, // Set this to \"true\" if you are having issues on IE11 or Edge\n    },\n    system: {\t\n        loggerOptions: {\t\n            loggerCallback: (level, message, containsPii) => {\t\n                if (containsPii) {\t\t\n                    return;\t\t\n                }\t\t\n                switch (level) {\t\t\n                    case LogLevel.Error:\t\t\n                        console.error(message);\t\t\n                        return;\t\t\n                    case LogLevel.Info:\t\t\n                        console.info(message);\t\t\n                        return;\t\t\n                    case LogLevel.Verbose:\t\t\n                        console.debug(message);\t\t\n                        return;\t\t\n                    case LogLevel.Warning:\t\t\n                        console.warn(message);\t\t\n                        return;\t\t\n                }\t\n            }\t\n        }\t\n    }\n};\n\n/**\n * Scopes you add here will be prompted for user consent during sign-in.\n * By default, MSAL.js will add OIDC scopes (openid, profile, email) to any login request.\n * For more information about OIDC scopes, visit: \n * https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent#openid-connect-scopes\n */\nexport const loginRequest = {\n    scopes: [\"User.Read\"]\n};\n\n/**\n * Add here the scopes to request when obtaining an access token for MS Graph API. For more information, see:\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/resources-and-scopes.md\n */\nexport const graphConfig = {\n    graphMeEndpoint: \"https://graph.microsoft.com/v1.0/me\"\n};\n","import React from \"react\";\nimport { useMsal } from \"@azure/msal-react\";\nimport { loginRequest } from \"../authConfig\";\nimport Button from '@material-ui/core/Button';\n\n/**\n * Renders a drop down button with child buttons for logging in with a popup or redirect\n */\nexport const SignInButton = () => {\n    const { instance } = useMsal();\n\n    const handleLogin = (loginType) => {\n        if (loginType === \"popup\") {\n            instance.loginPopup(loginRequest).catch(e => {\n                console.log(e);\n            });\n        } else if (loginType === \"redirect\") {\n            instance.loginRedirect(loginRequest).catch(e => {\n                console.log(e);\n            });\n        }\n    }\n    return (\n        <Button className=\"btn btn-primary\" variant=\"contained\" color=\"secondary\" drop=\"left\" onClick={() => handleLogin(\"redirect\")}>\n            Inicia Sesión\n        </Button>\n    )\n}","import React, { useEffect } from \"react\";\nimport { useMsal } from \"@azure/msal-react\";\nimport Button from '@material-ui/core/Button';\n\n/* Importaciones del buscador */\n\nimport InputBase from '@material-ui/core/InputBase';\nimport { alpha, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\n\n/* Fin de las importaciones del buscador */\n\n/* Estilos del buscador */\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        marginRight: 4,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n          marginLeft: theme.spacing(1),\n          width: 'auto',\n        },\n      },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '20ch',\n            },\n        },\n    },\n}));\n\n/**\n * Renderiza boton de Buscador y Logout\n */\nexport const SignOutButton = ( {buscar, setBuscar} ) => {\n\n    const { instance } = useMsal();\n    const classes = useStyles();\n\n    const { name, enter } = buscar;\n    \n    const handleEnter = ({ target, key }) => {\n        if (key === 'Enter') {\n            console.log(\"Se intentan buscar las coincidencias de: \", target.value);\n            setBuscar(\n                {\n                    ...buscar,\n                    [ target.name ]: target.value,\n                    enter : true\n                }\n            );\n        }\n    }\n\n    const handleChange = ({ target }) => {\n        \n        setBuscar(\n            {\n                ...buscar,\n                [ target.name ]: target.value,\n                enter : false\n            }\n        );\n    }\n    \n    const handleLogout = (logoutType) => {\n        if (logoutType === \"popup\") {\n            instance.logoutPopup({\n                postLogoutRedirectUri: \"/\",\n                mainWindowRedirectUri: \"/\"\n            });\n        } else if (logoutType === \"redirect\") {\n            instance.logoutRedirect({\n                postLogoutRedirectUri: \"/\",\n            });\n        }\n    }\n    return (\n        <>  \n            <div className={classes.search}>\n                <div className={classes.searchIcon}>\n                    <SearchIcon />\n                </div>\n                <InputBase\n                    name=\"name\"\n                    placeholder=\"Buscar...\"\n                    classes={{\n                        root: classes.inputRoot,\n                        input: classes.inputInput,\n                    }}\n                    inputProps={{ 'aria-label': 'search' }}\n                    value={ name }\n                    onKeyPress={ handleEnter }\n                    onChange={ (e) => handleChange(e) }\n                    autoComplete=\"off\"\n                    />\n            </div>\n            \n            <Button className=\"btn btn-primary\" variant=\"contained\" color=\"secondary\" drop=\"left\" onClick={() => handleLogout(\"redirect\")}>\n                Cerrar Sesión\n            </Button>\n        </>\n    )\n}","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport React from \"react\";\n\nimport { useIsAuthenticated } from \"@azure/msal-react\";\nimport { SignInButton } from \"./SignInButton\";\nimport { SignOutButton } from \"./SignOutButton\";\n\n/* Importaciones para Material UI toolbar */\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\n/* Definiciones de Variables para Material UI toolbar */\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }));\n\n  /**\n   * Renderiza el Componente Navbar con un boton de log-in o log-out dependiendo de si el usuario esta autenticado o no.\n   * @param props \n   */\n\n  export const PageLayout = ( {buscar, setBuscar, children} ) => {\n\n      const isAuthenticated = useIsAuthenticated();\n      const classes = useStyles();\n\n    return (\n        <>\n            <div className={classes.root}>\n                <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                    Plataforma de Autenticación de Microsoft\n                    </Typography>\n                    { isAuthenticated ? <SignOutButton buscar={ buscar } setBuscar={ setBuscar } /> : <SignInButton /> }\n                </Toolbar>\n                </AppBar>\n            </div>\n\n            <br></br>\n            { children }\n        </>\n    );\n};\n","import React from \"react\";\n\n/**\n * Renders information about the user obtained from MS Graph\n * @param props \n */\nexport const ProfileData = (props) => {\n    console.log(props.graphData);\n\n    return (\n        <div id=\"profile-div\">\n            <p><strong>First Name: </strong> {props.graphData.givenName}</p>\n            <p><strong>Last Name: </strong> {props.graphData.surname}</p>\n            <p><strong>Email: </strong> {props.graphData.userPrincipalName}</p>\n            <p><strong>Id: </strong> {props.graphData.id}</p>\n        </div>\n    );\n};","import { graphConfig } from \"./authConfig\";\n\n/**\n * Attaches a given access token to a MS Graph API call. Returns information about the user\n * @param accessToken \n */\nexport async function callMsGraph(accessToken) {\n    const headers = new Headers();\n    const bearer = `Bearer ${accessToken}`;\n\n    headers.append(\"Authorization\", bearer);\n\n    const options = {\n        method: \"GET\",\n        headers: headers\n    };\n\n    return fetch(graphConfig.graphMeEndpoint, options)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}\n","export default __webpack_public_path__ + \"static/media/bathroom1.0d9aabef.png\";","export default __webpack_public_path__ + \"static/media/PDF.16200e97.png\";","export default __webpack_public_path__ + \"static/media/JPG.22ace614.png\";","export default __webpack_public_path__ + \"static/media/DOC.839581f4.png\";","export default __webpack_public_path__ + \"static/media/FILE.6f1ec08c.png\";","export default __webpack_public_path__ + \"static/media/FOLDER2.037bbf71.png\";","import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\n// Proyecto Listo.\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport pdf from './images/PDF.png';\nimport jpg from './images/JPG.png';\nimport doc from './images/DOC.png';\nimport file from './images/FILE.png';\nimport carpeta from './images/FOLDER2.png';\nimport './album.css';\n\n\nfunction Copyright() {\n  /* Complemento del Footer.\n  Componente renderizado para complementar el Footer. */\n\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © Mi sitio web de proyectos realizados: '}\n      <Link color=\"inherit\" href=\"https://github.com/cocorland\">\n        {'https://github.com/cocorland'}\n      </Link>\n      {' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst buscarBreadcrumb = (breadcrumb, foldersOriginal, result) => {\n\n  let buscaRuta = `\\\\Users\\\\adminvencer\\\\Documents\\\\${breadcrumb.join('\\\\')}`;\n\n  let i,\n    currentChild;\n\n  for (i = 0; i < foldersOriginal.length; i += 1) {\n    if (foldersOriginal[i].path == buscaRuta) {\n      console.log(\"Este es el resultado en la funcion: \", foldersOriginal[i].children)\n      result.push(foldersOriginal[i].children)\n\n    } else {\n      if (foldersOriginal[i].children) {\n        currentChild = foldersOriginal[i].children\n\n        buscarBreadcrumb(breadcrumb, currentChild, result)\n      }\n    }\n  }\n  /* Este comentario es importante por que me muestra los procesos realizados. OJO. DESCOMENTARLO Y RESOLVER. */\n  /* console.log(\"Lo que la funcion buscarBreadcrumb va a retornar: \", result) */\n}\n\nfunction handleClick(event, breadcrumb, setBreadcrumb, folders, setFolders, recorrido, setRecorrido, foldersOriginal, setConsegui, actual, setActual, setEnter) {\n\n  /* Manejador de eventos.\n  Controla las acciones que se realizan al hacer click en cualquiera de los niveles del breadcrumb */\n\n  // setConsegui(true);\n  let historial = [...recorrido];\n  const breadcrumbClickeado = (element) => element === event.target.innerText;\n  const longitud = breadcrumb.findIndex(breadcrumbClickeado) + 1\n  breadcrumb.length = longitud;\n  historial.length = longitud;\n  setRecorrido([...historial]);\n\n  let result = [];\n  buscarBreadcrumb(breadcrumb, foldersOriginal, result);\n  console.log(\"Result al terminar la funcion buscar: \", result[0]);\n\n  if (result[0]) {\n    setFolders(result[0]);\n    setActual(result[0]);\n  } else {\n    setFolders(foldersOriginal);\n    setActual(foldersOriginal);\n  }\n  // setFolders(recorrido[longitud])\n\n  setBreadcrumb(breadcrumb);\n  setEnter({ name: '', enter: false });\n}\n\nconst SimpleBreadcrumbs = ({ breadcrumb, setBreadcrumb, folders, setFolders, recorrido, setRecorrido, foldersOriginal, setConsegui, actual, setActual, setEnter }) => {\n  /* Componente encargado de la renderizacion del breadcrumb.\n  Todos los elementos anteriores al ultimo deben ser clickeables. El ultimo elemento indica en que nivel del directorio estoy. */\n\n  let arreglo = [...breadcrumb]\n  arreglo.pop();\n\n  return (\n    <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\" align=\"center\">\n      {arreglo.map((directorioRecorrido) => (\n        <Button\n          underline=\"hover\"\n          color=\"primary\"\n          key={directorioRecorrido}\n          onClick={(event) => handleClick\n            (\n              event, [...breadcrumb], setBreadcrumb, folders, setFolders, [...recorrido], setRecorrido, foldersOriginal, setConsegui, actual, setActual, setEnter\n            )\n          }>\n          {directorioRecorrido}\n        </Button>))}\n      <Button underline=\"hover\" color=\"inherit\">{breadcrumb[breadcrumb.length - 1]}</Button>\n    </Breadcrumbs>\n  )\n};\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nfunction findNode(name, folders, finalArray) {\n  // Devuelve en el arreglo <finalArray> a todos los objetos que coincidan con el elemento <name> a buscar.\n  let i,\n    currentChild,\n    result;\n\n  for (i = 0; i < folders.length; i += 1) {\n    if (folders[i].name.includes(name)) {\n      finalArray.push(folders[i])\n\n      if (folders[i].children) {\n        currentChild = folders[i].children\n\n        result = findNode(name, currentChild, finalArray)\n      }\n\n    } else {\n      if (folders[i].children) {\n        currentChild = folders[i].children\n\n        result = findNode(name, currentChild, finalArray)\n      }\n    }\n  }\n  return finalArray\n}\n\nexport default function Album(props) {\n\n  // Declaracion de estilos.\n  const classes = useStyles();\n  // Cadena de texto para hacer request a la API 1.\n  const url_name = 'http://10.20.4.251:4000/api/folders';\n  // Desestructuracion de las variables y estados que provienen del buscador.\n  const { buscar: buscador, setBuscar: setEnter } = props;\n  // Estado que mantiene el recorrido de directorios desde el cual provengo en caso de navegacion.\n  const [recorrido, setRecorrido] = useState([]);\n  // Estado que mantiene el breadcrumb.\n  const [breadcrumb, setBreadcrumb] = useState(['COMPAÑÍAS']);\n  // Estado para mantener la ruta a la cual se realiza el request de un archivo.\n  const [buscar, setBuscar] = useState('https:localhost:5000');\n  // Estado en el que se almacenara todo el arbol de directorios importado del json y se modifica para mostrar directorio actual.\n  const [folders, setFolders] = useState();\n  // Estado para almacenar el arbol y que siempre se mantenga.\n  const [foldersOriginal, setFoldersOriginal] = useState();\n  // Estado para mantener una referencia fija a la carpeta donde estoy. (Cambia al abrir una carpeta o seleccionar un breadcrumb).\n  const [actual, setActual] = useState();\n  // Estado para saber si obtuve o no resultados en las busquedas.\n  const [consegui, setConsegui] = useState(true)\n\n  const fetchApi = async () => {\n    try {\n      const response = await fetch(url_name)\n      console.log(response.status)\n      const responseJSON = await response.json()\n      setFolders(responseJSON)\n      setFoldersOriginal(responseJSON)\n      setActual(responseJSON)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    fetchApi();\n  }, [])\n\n  useEffect(() => {\n    setRecorrido([...recorrido, folders]);\n    let caminito = breadcrumb.map((ruta) => encodeURI(ruta));\n    caminito.shift();\n    let ruta2 = 'http://localhost:5000/' + caminito.join('/');\n    setBuscar(ruta2);\n\n  }, [folders]);\n\n  useEffect(() => {\n    /* Efecto que dispara el buscador despues de que folders se cargue por primera vez */\n    /* Si la palabra a buscar excede los 7 caracteres, la funcion \"findNode\" es llamada. Si no, hay que presionar Enter. */\n    let b = buscador.name.toUpperCase();\n    if (folders) {\n      if (buscador.name.length > 7) {\n        // El buscador autocompleta la busqueda a partir de 7 caracteres.\n        let hallado = buscador.name.match(/\\w/);\n        if (hallado) {\n          let finalArray = [];\n          let arregloDeCoincidencias = findNode(b, actual, finalArray);\n          setFolders(arregloDeCoincidencias);\n          if (arregloDeCoincidencias.length == 0) {\n            setConsegui(false)\n          }\n          else {\n            console.log(`Encontre ${arregloDeCoincidencias.length} resultados.`);\n          }\n        }\n      }\n    }\n\n    if (buscador.enter) {\n      // Intenta determinar si el elemento a buscar coincide con una palabra o numero valido mediante una expresion regular.\n      let hallado = b.match(/\\w/);\n      if (b.length == 0) {\n        console.log('Busqueda vacia, muestra la carpeta actual.');\n        setFolders(actual);\n      }\n      if (hallado) {\n        let finalArray = [];\n        let arregloDeCoincidencias = findNode(b, actual, finalArray);\n        setFolders(arregloDeCoincidencias);\n        if (arregloDeCoincidencias.length == 0) {\n          setConsegui(false)\n        }\n        else {\n          console.log(`Encontre ${arregloDeCoincidencias.length} resultados.`);\n        }\n      }\n    }\n  }, [buscador])\n\n  const displayImage = (param) => {\n    switch (param) {\n      case param = '.pdf':\n        return pdf;\n      case param = '.jpg':\n        return jpg;\n      case param = '.docx':\n        return doc;\n      default:\n        return file;\n    }\n  }\n\n  function handleOpen(event, cards, path) {\n    /* event.preventDefault(); */\n    setFolders([...cards]);\n    setActual([...cards]);\n    /* setBreadcrumb([...breadcrumb, nombre]); */\n    \n    let setearElBreadcrumb = path.split(/\\\\/).splice(4);\n    /* setearElBreadcumb debe devolver el conjunto que será mapeado por el componente breadcrumb  */\n    /* por ejemplo, ['COMPAÑÍAS', 'VENCERÁMICA']. Esto lo obtengo mediante la ruta original, y la funcion splice  */\n    \n    setBreadcrumb([...setearElBreadcrumb]);\n    setConsegui(true);\n    setEnter({ name: '', enter: false })\n  };\n\n  function handleView(event, path) {\n    /* Funcion para obtener la ruta en la cual visualizar la imagen. Permite visualizar imagenes encontradas mediante el buscador. */\n    let setearLaVista = path.split(/\\\\/).splice(5);\n\n    setBuscar(`http://localhost:5000/${setearLaVista.join('/')}`);\n  }\n\n  const MostrarRuta = ({ ruta }) => {\n\n    let setearLaVista = ruta.split(/\\\\/).splice(4).join('/');\n\n    return (\n      <p className=\"breakAll\">\n        {setearLaVista}\n      </p>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <main>\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          <SimpleBreadcrumbs\n            breadcrumb={[...breadcrumb]}\n            setBreadcrumb={setBreadcrumb}\n            folders={folders}\n            setFolders={setFolders}\n            recorrido={recorrido}\n            setRecorrido={setRecorrido}\n            foldersOriginal={foldersOriginal}\n            actual={actual}\n            setActual={setActual}\n            setEnter={setEnter} />\n        </Container>\n        {/* Hero unit */}\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          {/* End hero unit */}\n          <Grid container spacing={4}>\n            {!folders ? <div className=\"alert alert-danger\"> No se pudo acceder a la base de datos del servidor </div> :\n              (folders.length == 0 ?\n                (consegui == true ?\n                  <div className=\"alert alert-danger\"> Esta carpeta esta vacia </div> :\n                  <div className=\"alert alert-danger\"> No consegui resultados. Actualice la página o ingrese otra búsqueda. </div>)\n                :\n                (folders.map((card) => (\n                  <Grid item xs={12} sm={6} md={4} key={`${card.name}${card.path}`}>\n                    <Card className=\"animate__animated animate__fadeIn animate__fast\">\n                      <CardMedia                                                                                 \n                        name={card.name}\n                        className={classes.cardMedia}\n                        image={card.type == \"directory\" ? carpeta : displayImage(card.extension)}\n                      />\n                      <CardContent className={classes.cardContent}>\n\n                        <Typography gutterBottom variant=\"h6\" component=\"h2\">\n                          {card.name}\n                        </Typography>\n                        {\n                          buscador.enter ?\n                            <MostrarRuta ruta={card.path} /> :\n                            <> </>\n                        }\n                        <hr />\n\n                      </CardContent>\n\n                      <CardActions>\n                        {card.type == \"directory\" ?\n                          <Button size=\"small\" onClick={(event) => handleOpen(event, [...card.children], card.path)}>\n                            Abrir Directorio\n                          </Button>\n                          :\n                          <Button onClick={(event) => handleView(event, card.path)} href={`${buscar}`} size=\"small\" target=\"_blank\">\n                            Ver\n                          </Button>\n                        }\n                      </CardActions>\n                    </Card>\n                  </Grid>\n                )))\n              )\n            }\n          </Grid>\n        </Container>\n\n      </main>\n\n      {/* Footer */}\n      <footer className={classes.footer}>\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          Departamento de Informática Vencerámica\n        </Typography>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n          <a>Página web propiedad de Vencerámica Venezuela.</a>\n          <li><a>Diseño, Implementación, Gestión y Mantenimiento realizado por: </a></li>\n          <li><a>Orlando Chaparro Salazar</a></li>\n        </Typography>\n        <Copyright />\n      </footer>\n      {/* End footer */}\n    </React.Fragment>\n\n  );\n}","import React, { useState } from \"react\";\nimport { AuthenticatedTemplate, UnauthenticatedTemplate, useMsal } from \"@azure/msal-react\";\nimport { loginRequest } from \"./authConfig\";\nimport { PageLayout } from \"./components/PageLayout\";\nimport { ProfileData } from \"./components/ProfileData\";\nimport { callMsGraph } from \"./graph\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./styles/App.css\";\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport logo from './components/images/bathroom1.png';\nimport './App.css'\nimport Album from \"./components/album\";\n\n/**\n * Renders information about the signed-in user or a button to retrieve data about the user\n */\n  \n  const useStyles = makeStyles((theme) => ({\n    icon: {\n      marginRight: theme.spacing(2),\n    },\n    heroContent: {\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(8, 0, 6),\n    },\n    heroButtons: {\n      marginTop: theme.spacing(4),\n    },\n    cardGrid: {\n      paddingTop: theme.spacing(8),\n      paddingBottom: theme.spacing(8),\n    },\n    card: {\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    cardMedia: {\n      paddingTop: '56.25%', // 16:9\n    },\n    cardContent: {\n      flexGrow: 1,\n    },\n    footer: {\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(6),\n    },\n  }));\n\n\nconst ProfileContent = () => {\n    const classes = useStyles();\n    const { instance, accounts } = useMsal();\n    const [graphData, setGraphData] = useState(null);\n\n    function RequestProfileData() {\n        // Silently acquires an access token which is then attached to a request for MS Graph data\n        instance.acquireTokenSilent({\n            ...loginRequest,\n            account: accounts[0]\n        }).then((response) => {\n            callMsGraph(response.accessToken).then(response => setGraphData(response));\n        });\n    }\n\n    return (\n        <>\n            <Container maxWidth=\"sm\">\n            <Typography component=\"h1\" variant=\"h4\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                Bienvenido(a) {accounts[0].name}\n            </Typography>\n            <Typography variant=\"subtitle2\" align=\"center\" color=\"textSecondary\" paragraph>\n                Te damos la bienvenida al sistema de visualización de archivos de Vencerámica, Venezuela. Te encuentras en\n                el servidor principal. Utilizando el sistema de navegación por tarjetas puedes dirigirte al archivo que\n                necesitas, o puedes utilizar el buscador en la barra de tareas.\n            </Typography>\n            <div className={classes.heroButtons}>\n\n                {graphData ? \n                    <ProfileData graphData={graphData} />\n                    :\n                    <Button variant=\"secondary\" onClick={RequestProfileData}>Solicitar Datos del Usuario</Button>\n                }\n\n            </div>\n          </Container>\n        </>\n    );\n};\n\n/**\n * If a user is authenticated the ProfileContent component above is rendered. Otherwise a message indicating a user is not authenticated is rendered.\n */\n\nconst MainContent = ({ buscar, setBuscar }) => {    \n\n    return (\n        <div className=\"App\">\n            <AuthenticatedTemplate>\n                <ProfileContent />\n                <Album buscar={buscar} setBuscar={setBuscar}/>\n\n            </AuthenticatedTemplate>\n\n            <UnauthenticatedTemplate>\n                <Typography component=\"h1\" variant=\"h4\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                    Bienvenido(a) al Sistema de Visualización de Archivos de Vencerámica\n                </Typography>\n                <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\" paragraph>\n                    Por favor, Inicie sesión con su cuenta @venceramica.com.\n                </Typography>\n                <br></br>\n                <br></br>\n                <img align=\"center\" src={logo} alt=\"logo\" />\n            </UnauthenticatedTemplate>\n        </div>\n    );\n};\n\nexport default function App() {\n\n    const [buscar, setBuscar] = useState({ name: '', enter: false })\n    return (\n        <PageLayout buscar={buscar} setBuscar={setBuscar}>\n            <MainContent buscar={buscar} setBuscar={setBuscar} />\n        </PageLayout>\n    );\n}\n","import React from 'react';\r\n\r\n/* Vamos a acceder a esta pagina de prueba con la ruta /ver */\r\nconst visualizador = () => {\r\n    return <div>Pagina de Practica.</div>;\r\n}\r\n\r\nexport default visualizador;","import React from 'react';\r\nimport {BrowserRouter, Switch, Route, Redirect} from 'react-router-dom';\r\nimport App from './App.jsx';\r\nimport visualizador from './components/visualizador';\r\n\r\nfunction Routes() {\r\n  //const rutaIIS=\"\"; //Pruebas\r\n  const rutaIIS=\"/OMNIPAGE\";  //Produccion\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path={rutaIIS+\"/ver\"} component={visualizador}/>\r\n        <Route exact path={rutaIIS} component={App}/>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./styles/index.css\";\nimport Routes from \"./routes\";\nimport { PublicClientApplication } from \"@azure/msal-browser\";\nimport { MsalProvider } from \"@azure/msal-react\";\nimport { msalConfig } from \"./authConfig\";\nimport \"./components/estilos.css\";\n\n/**\n * Initialize a PublicClientApplication instance which is provided to the MsalProvider component\n * We recommend initializing this outside of your root component to ensure it is not re-initialized on re-renders\n */\nconst msalInstance = new PublicClientApplication(msalConfig);\n\n/**\n * We recommend wrapping most or all of your components in the MsalProvider component. It's best to render the MsalProvider as close to the root as possible.\n */\nReactDOM.render(\n    <React.StrictMode>\n        <MsalProvider instance={msalInstance}>\n            <Routes />\n        </MsalProvider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}